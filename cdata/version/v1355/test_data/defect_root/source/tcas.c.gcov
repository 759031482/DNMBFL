        -:    0:Source:/home/cyxy/files/access/cdata/version/v1355/test_data/defect_root/source/tcas.c
        -:    0:Graph:/home/cyxy/files/access/cdata/version/v1355/test_data/defect_root/source/tcas.gcno
        -:    0:Data:/home/cyxy/files/access/cdata/version/v1355/test_data/defect_root/source/tcas.gcda
        -:    0:Runs:3
        -:    1:#include <stdio.h>
        -:    2:#include <string.h>
        -:    3:
        -:    4:#define MAX_SIZE 1000001
        -:    5:
        -:    6:char public_key[MAX_SIZE];
        -:    7:
        3:    8:int main(int argc, char *argv[])
        -:    9:{
        -:   10:    int a, b;
        -:   11:    int left_side[MAX_SIZE];
        -:   12:    int right_side[MAX_SIZE];
        -:   13:    
        3:   14:    scanf("%s", public_key);
        3:   15:    scanf("%d %d", &a, &b);
        -:   16:    
        3:   17:    int key_length = strlen(public_key);
        3:   18:    int multiple = 1;
        3:   19:    int tmp_l_num = 0;
        3:   20:    int tmp_r_num = 0;
        -:   21:    
        -:   22:    int i;
       12:   23:    for(i = 0; i < key_length; i++)
        -:   24:    {
        9:   25:        tmp_r_num = ((public_key[key_length-1-i] - '0') * multiple + tmp_r_num) % b;
        9:   26:        multiple = (multiple * 10) % b;
        9:   27:        right_side[key_length-1-i] = tmp_r_num;
        -:   28:        
        9:   29:        tmp_l_num = (tmp_l_num * 10 + (public_key[i] - '0')) % a;
        9:   30:        left_side[i] = tmp_l_num;
        -:   31:    }
        -:   32:    
        3:   33:    int pos = key_length;
        -:   34:    
        6:   35:    for(i = 0; i < key_length; i++)
        -:   36:    {
        6:   37:        if(left_side[i] == 0 && right_side[i+1] == 0)
        -:   38:        {
        6:   39:            while(!(public_key[i+1] - '0')) i++;
        3:   40:            pos = i;
        3:   41:            break;
        -:   42:        }
        -:   43:    }
        -:   44:    
        3:   45:    if(pos < key_length-1)
        -:   46:    {
    #####:   47:        printf("YES\n");
        -:   48:        
    #####:   49:        for(i = 0; i <= pos; i++)
    #####:   50:            printf("%c", public_key[i]);
    #####:   51:        printf("\n");
        -:   52:        
    #####:   53:        for(; i < key_length; i++)
    #####:   54:            printf("%c", public_key[i]);
    #####:   55:        printf("\n");
        -:   56:    }
        -:   57:    else
        -:   58:    {
        3:   59:        printf("NO\n");
        -:   60:    }
        -:   61:    
        3:   62:    return 0;
        -:   63:}
