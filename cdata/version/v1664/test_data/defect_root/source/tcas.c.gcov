        -:    0:Source:/home/cyxy/files/access/cdata/version/v1664/test_data/defect_root/source/tcas.c
        -:    0:Graph:/home/cyxy/files/access/cdata/version/v1664/test_data/defect_root/source/tcas.gcno
        -:    0:Data:/home/cyxy/files/access/cdata/version/v1664/test_data/defect_root/source/tcas.gcda
        -:    0:Runs:1
        -:    1:#include<stdio.h>
        -:    2:#define MOD 1000000009
        -:    3:
       23:    4:int sqr(long long int x, int n)
        -:    5:{
       23:    6:	if(n==0)
    #####:    7:		return 1;
       23:    8:	else if(n==1)
        1:    9:		return x;
       22:   10:	else if(n%2==0)
       13:   11:		return sqr( (x*x)%MOD, n/2 ) % MOD;
        -:   12:	else
        9:   13:		return (x * sqr( (x*x)%MOD, (n-1)/2 )) % MOD;
        -:   14:}
        -:   15:
        1:   16:int main(int argc, char *argv[])
        -:   17:{
        -:   18:	int n, m, k;
        1:   19:	scanf("%d %d %d", &n, &m, &k);
        -:   20:	int x, y, z;
        1:   21:	z = n%k;
        1:   22:	y = n/k;
        1:   23:	if(y*(k-1)+z >= m)
        -:   24:	{
    #####:   25:		printf("%d\n", m);
        -:   26:	}
        -:   27:	else
        -:   28:	{
        1:   29:		x = m - y*(k-1) - z;
        1:   30:		y -= x;
        -:   31:		long long int ans;
        -:   32:		int i;
        1:   33:		ans = sqr(2, x+1);
        1:   34:		ans -= 2;
        1:   35:		if(ans<0)
    #####:   36:			ans += MOD;
        1:   37:		k %= MOD;
        1:   38:		ans *= k;
        1:   39:		ans %= MOD;
        1:   40:		ans += y*(k-1);
        1:   41:		ans %= MOD;
        1:   42:		ans += z;
        1:   43:		ans %= MOD;
        1:   44:		printf("%lld\n", ans);
        -:   45:	}
        1:   46:	return 0;
        -:   47:}
