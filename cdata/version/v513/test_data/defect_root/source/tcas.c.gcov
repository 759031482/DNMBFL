        -:    0:Source:/home/cyxy/files/access/cdata/version/v513/test_data/defect_root/source/tcas.c
        -:    0:Graph:/home/cyxy/files/access/cdata/version/v513/test_data/defect_root/source/tcas.gcno
        -:    0:Data:/home/cyxy/files/access/cdata/version/v513/test_data/defect_root/source/tcas.gcda
        -:    0:Runs:3
        -:    1:#include <stdio.h>
        -:    2:#include <string.h>
        -:    3:int call(char,int*,int*);
        -:    4:int a[501][501];
        -:    5:int x,y;
        3:    6:int main(int argc, char *argv[])
        -:    7:{
        3:    8:    int i,j,v,n,ans[100005],t=1,s=0,x0,y0;
        -:    9:    char name[100005];
        3:   10:    scanf("%d%d%d%d",&x,&y,&x0,&y0);
        3:   11:    scanf("%s",name);
        3:   12:    n=strlen(name);
        3:   13:    ans[0]=1;
     1503:   14:    for(i=1;i<=500;i++)
   751500:   15:    for(j=1;j<=500;j++)
   750000:   16:     a[i][j]=0;
        3:   17:    a[x0][y0]=1; 
       24:   18:    for(i=0;i<=n-2;i++)
        -:   19:    {
       21:   20:        v=call(name[i],&x0,&y0);
       21:   21:        if(v==1)
       15:   22:          ans[t]=1;
        -:   23:        else
        6:   24:          ans[t]=0;
       21:   25:        t++;  
        -:   26:    }
        3:   27:    v=call(name[n-1],&x0,&y0);
       12:   28:    for(i=1;i<=x;i++)
        -:   29:    {
       45:   30:        for(j=1;j<=y;j++)
        -:   31:        {
       36:   32:            if(a[i][j]==0)
       15:   33:              s++;
        -:   34:        }
        -:   35:    }
        3:   36:    if(v==1)
        3:   37:      s=s+v;
        3:   38:    ans[t]=s;
       30:   39:    for(i=0;i<=t;i++)
       27:   40:      printf("%d ",ans[i]);
        3:   41:    return 0;  
        -:   42:}
       24:   43:int call(char c,int *x0,int *y0)
        -:   44:{
        -:   45:    int x1,y1;
       24:   46:    x1=(*x0);y1=(*y0);
       24:   47:    if(c=='U')
        6:   48:     (*x0)--;
       24:   49:    if(c=='D')
        6:   50:     (*x0)++;
       24:   51:    if(c=='R')
        9:   52:      (*y0)++;
       24:   53:    if(c=='L')
        3:   54:      (*y0)--;
       24:   55:    if((*x0)<=x&&(*y0)<=y&&(*x0)>=1&&(*y0)>=1&&a[(*x0)][(*y0)]==0)
        -:   56:    {
       18:   57:        a[(*x0)][(*y0)]=1;
       18:   58:        return(1);
        -:   59:    }
        -:   60:    else
        -:   61:    {
       6*:   62:      if((*x0)>x||(*y0)>y||(*x0)<1||(*y0)<1)
        6:   63:      { *x0=x1;
        6:   64:       *y0=y1;
        -:   65:      }
        6:   66:        return(0); 
        -:   67:    }
        -:   68:}
